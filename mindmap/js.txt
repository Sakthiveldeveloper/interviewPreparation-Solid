JavaScript (JS)
├── 1. Basics
│   ├── What is JavaScript? (client-side, server-side)
│   ├── Adding JS to HTML
│   │   ├── Inline: <button onclick="...">
│   │   ├── Internal: <script>...</script>
│   │   └── External: <script src="app.js"></script>
│   ├── Syntax & Case Sensitivity
│   ├── Comments: // single-line, /* multi-line */
│   └── "use strict" mode -> help to improve code quality and Security
│
├── 2. Variables & Scope
│   ├── var (function-scoped)
│   ├── let (block-scoped)
│   ├── const (block-scoped, constant reference)
│   ├── Hoisting behavior
│   ├── Naming rules
│   ├── Global scope, function scope, block scope
│   ├── Lexical scope
│   └── Closures (data privacy, currying)
│
├── 3. Data Types
│   ├── Primitive Types: string, number, boolean, null, undefined, symbol, bigint
│   ├── Non-primitive: object, array, function, date, regex
│   ├── Type checking: typeof, instanceof
│   ├── Type conversion: implicit & explicit
│   └── Truthy & Falsy values
│
├── 4. Operators
│   ├── Arithmetic (+, -, *, /, %, **)
│   ├── Assignment (=, +=, -=, etc.)
│   ├── Comparison (==, ===, !=, !==, >, <, >=, <=)
│   ├── Logical (&&, ||, !)
│   ├── Ternary (condition ? value1 : value2)
│   ├── Spread & Rest (...)
│   ├── Optional chaining (?.)
│   └── Nullish coalescing (??)
│
├── 5. Control Flow(condition statement, loop statement, jump statement)
│   ├── if, else if, else
│   ├── switch
│   ├── for, while, do...while, for...of, for...in
│   ├── break, continue
│   └── try...catch...finally
│
├── 6. Functions
│   ├── Function Declaration
│   ├── Function Expression
│   ├── Arrow Functions (this binding differences)
│   ├── Parameters, Arguments, Default Parameters, Rest Parameters
│   ├── Return values
│   ├── IIFE (Immediately Invoked Function Expressions)
│   ├── Higher-order functions
│   ├── Callback functions
│   └── Recursion -> repeatly call itself for until reach the condition
│
├── 7. Objects & Prototypes
│   ├── Object creation: literal, constructor, Object.create()
│   ├── Properties & Methods
│   ├── this keyword (implicit, explicit, new, arrow functions)
│   ├── Object destructuring
│   ├── Object.assign(), Object.keys(), Object.values(), Object.entries()
│   ├── Prototypes & prototype chain
│   ├── Inheritance: ES5 (prototype), ES6 classes & extends
│   └── instanceof vs isPrototypeOf
│
├── 8. Arrays
│   ├── Creation & indexing
│   ├── Array methods
│   │   ├── push(), pop(), shift(), unshift()
│   │   ├── map(), filter(), reduce(), forEach(), some(), every(), find(), findIndex()
│   │   ├── concat(), slice(), splice()
│   │   ├── includes(), indexOf(), lastIndexOf()
│   │   ├── flat(), flatMap()
│   │   └── sort(), reverse()
│   ├── Spread & Destructuring
│   └── Iteration with for...of
│
├── 9. Strings
│   ├── Template literals
│   ├── String methods: length, toUpperCase(), toLowerCase()
│   ├── trim(), split(), replace(), includes()
│   ├── charAt(), indexOf(), substring(), slice(), substr()
│   └── padStart(), padEnd(), repeat()
│
├── 10. Dates & Math
│   ├── Date object & methods
│   ├── Date formatting
│   ├── Math methods: round(), floor(), ceil(), random(), min(), max(), abs()
│   └── Working with timestamps
│
├── 11. Regular Expressions
│   ├── Creating RegExp (literal, constructor)
│   ├── Flags: g, i, m, u, s
│   ├── Common patterns
│   └── Methods: test(), exec(), match(), replace()
│
├── 12. DOM Manipulation
│   ├── Selecting elements: getElementById(), getElementsByClassName(), querySelector()
│   ├── Changing content: textContent, innerHTML
│   ├── Changing styles: element.style.property, classList
│   ├── Creating/Removing elements: createElement(), append(), remove()
│   └── Modifying attributes: setAttribute(), getAttribute(), removeAttribute()
│
├── 13. Events
│   ├── Mouse events (click, dblclick, mouseover, mouseout)
│   ├── Keyboard events (keydown, keyup, keypress)
│   ├── Form events (submit, change, input, focus, blur)
│   ├── Event bubbling & capturing
│   ├── Event delegation
│   └── Passive event listeners
│
├── 14. ES6+ Features
│   ├── let & const
│   ├── Arrow functions
│   ├── Template literals
│   ├── Destructuring
│   ├── Default parameters
│   ├── Modules (import/export, default vs named, dynamic imports)
│   ├── async/await
│   ├── Object & Array spread/rest
│   └── New operators: ??, ?., ||=, &&=, ??=
│
├── 15. JSON
│   ├── JSON.parse()
│   ├── JSON.stringify()
│   └── Data exchange with APIs
│
├── 16. Asynchronous JS
│   ├── setTimeout(), setInterval(), clearTimeout(), clearInterval()
│   ├── Callbacks
│   ├── Promises (resolve, reject, then, catch, finally)
│   ├── Promise.all(), Promise.race(), Promise.any(), Promise.allSettled()
│   ├── async/await
│   ├── Fetch API / AJAX
│   └── Event loop, call stack, microtasks vs macrotasks
│
├── 17. Error Handling
│   ├── try...catch
│   ├── throw
│   ├── finally
│   ├── Error objects (name, message, stack)
│   └── Handling async errors
│
├── 18. Storage
│   ├── localStorage
│   ├── sessionStorage
│   ├── cookies
│   └── IndexedDB basics
│
├── 19. Security
│   ├── Preventing XSS
│   ├── Avoiding eval()
│   └── Safe DOM manipulation
│
├── 20. Performance
│   ├── Debouncing & throttling
│   ├── Lazy loading
│   ├── Minification & compression
│   └── Memory management & garbage collection
│
├── 21. Testing (Basic)
│   ├── Unit testing concepts
│   ├── Simple Jest examples
│   └── Assertions & mocks
